{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HeroComponent = class HeroComponent {\n  constructor() {\n    this.typedText = '';\n    this.nama = '';\n    this.email = '';\n    this.password = '';\n    this.message = '';\n    this.namaInvalid = false;\n    this.emailInvalid = false;\n    this.passwordInvalid = false;\n    // Set your desired text\n    const textToType = \"apa ada hal yang bisa saya bantu tuan ? \";\n    this.typeText(textToType, 0);\n  }\n  typeText(text, index) {\n    this.typedText = text.substring(0, index);\n    if (index < text.length) {\n      setTimeout(() => {\n        this.typeText(text, index + 1);\n      }, 100);\n    }\n  }\n  handleClick() {\n    this.namaInvalid = !this.nama;\n    this.emailInvalid = !this.email;\n    this.passwordInvalid = !this.password;\n    if (this.namaInvalid || this.emailInvalid || this.passwordInvalid) {\n      this.message = 'Semua field harus diisi!';\n    } else {\n      this.message = 'Form berhasil dikirim!';\n      // Lakukan tindakan lanjutan seperti mengirim data ke backend, dsb.\n    }\n  }\n};\n\nHeroComponent = __decorate([Component({\n  selector: 'app-hero',\n  templateUrl: './hero.component.html',\n  styleUrls: ['./hero.component.css']\n})], HeroComponent);","map":{"version":3,"names":["Component","HeroComponent","constructor","typedText","nama","email","password","message","namaInvalid","emailInvalid","passwordInvalid","textToType","typeText","text","index","substring","length","setTimeout","handleClick","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/alhuzwiri/Documents/lab/angular/chatbot/src/app/hero/hero.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-hero',\n  templateUrl: './hero.component.html',\n  styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent {\n  typedText: any = '';\n  nama: string = '';\n  email: string = '';\n  password: string = '';\n  message: string = '';\n\n  namaInvalid: boolean = false;\n  emailInvalid: boolean = false;\n  passwordInvalid: boolean = false;\n  constructor() {\n    // Set your desired text\n    const textToType: string = \"apa ada hal yang bisa saya bantu tuan ? \";\n    this.typeText(textToType, 0);\n  }\n\n  typeText(text: string, index: number) {\n    this.typedText = text.substring(0, index);\n    if (index < text.length) {\n      setTimeout(() => {\n        this.typeText(text, index + 1);\n      }, 100); \n    }\n  }\n\n  handleClick(){\n    this.namaInvalid = !this.nama;\n    this.emailInvalid = !this.email;\n    this.passwordInvalid = !this.password;\n\n    if (this.namaInvalid || this.emailInvalid || this.passwordInvalid) {\n      this.message = 'Semua field harus diisi!';\n    } else {\n      this.message = 'Form berhasil dikirim!';\n      // Lakukan tindakan lanjutan seperti mengirim data ke backend, dsb.\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAUxBC,YAAA;IATA,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,OAAO,GAAW,EAAE;IAEpB,KAAAC,WAAW,GAAY,KAAK;IAC5B,KAAAC,YAAY,GAAY,KAAK;IAC7B,KAAAC,eAAe,GAAY,KAAK;IAE9B;IACA,MAAMC,UAAU,GAAW,0CAA0C;IACrE,IAAI,CAACC,QAAQ,CAACD,UAAU,EAAE,CAAC,CAAC;EAC9B;EAEAC,QAAQA,CAACC,IAAY,EAAEC,KAAa;IAClC,IAAI,CAACX,SAAS,GAAGU,IAAI,CAACE,SAAS,CAAC,CAAC,EAAED,KAAK,CAAC;IACzC,IAAIA,KAAK,GAAGD,IAAI,CAACG,MAAM,EAAE;MACvBC,UAAU,CAAC,MAAK;QACd,IAAI,CAACL,QAAQ,CAACC,IAAI,EAAEC,KAAK,GAAG,CAAC,CAAC;MAChC,CAAC,EAAE,GAAG,CAAC;;EAEX;EAEAI,WAAWA,CAAA;IACT,IAAI,CAACV,WAAW,GAAG,CAAC,IAAI,CAACJ,IAAI;IAC7B,IAAI,CAACK,YAAY,GAAG,CAAC,IAAI,CAACJ,KAAK;IAC/B,IAAI,CAACK,eAAe,GAAG,CAAC,IAAI,CAACJ,QAAQ;IAErC,IAAI,IAAI,CAACE,WAAW,IAAI,IAAI,CAACC,YAAY,IAAI,IAAI,CAACC,eAAe,EAAE;MACjE,IAAI,CAACH,OAAO,GAAG,0BAA0B;KAC1C,MAAM;MACL,IAAI,CAACA,OAAO,GAAG,wBAAwB;MACvC;;EAEJ;CACD;;AArCYN,aAAa,GAAAkB,UAAA,EALzBnB,SAAS,CAAC;EACToB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWrB,aAAa,CAqCzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}